import { Container, Text } from '@/components/ui';
import { BORDER_RADIUS, COLORS, SPACING } from '@/constants/design-system';
import { resetProgress } from '@/lib/storage';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { Stack, useRouter } from 'expo-router';
import { useEffect, useState } from 'react';
import { Alert, Pressable, ScrollView, Switch, View } from 'react-native';
import { useSafeAreaInsets } from 'react-native-safe-area-context';

const SETTINGS_SOUND_KEY = 'settings:sound';
const SETTINGS_HAPTICS_KEY = 'settings:haptics';

export default function SettingsScreen() {
  const router = useRouter();
  const insets = useSafeAreaInsets();
  const [sound, setSound] = useState(true);
  const [haptics, setHaptics] = useState(true);

  useEffect(() => {
    (async () => {
      const savedSound = await AsyncStorage.getItem(SETTINGS_SOUND_KEY);
      const savedHaptics = await AsyncStorage.getItem(SETTINGS_HAPTICS_KEY);

      if (savedSound !== null) setSound(savedSound === 'true');
      if (savedHaptics !== null) setHaptics(savedHaptics === 'true');
    })();
  }, []);

  const toggleSound = async (value: boolean) => {
    setSound(value);
    await AsyncStorage.setItem(SETTINGS_SOUND_KEY, String(value));
  };

  const toggleHaptics = async (value: boolean) => {
    setHaptics(value);
    await AsyncStorage.setItem(SETTINGS_HAPTICS_KEY, String(value));
  };

  const handleResetProgress = () => {
    Alert.alert(
      '‚ö†Ô∏è –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª—ë–Ω:\n\n‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤\n‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω–µ–π –∏ –∑–≤—ë–∑–¥—ã\n‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!',
      [
        {
          text: '–û—Ç–º–µ–Ω–∞',
          style: 'cancel',
        },
        {
          text: '–°–±—Ä–æ—Å–∏—Ç—å',
          style: 'destructive',
          onPress: async () => {
            try {
              await resetProgress();
              Alert.alert(
                '‚úì –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω',
                '–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.',
                [
                  {
                    text: 'OK',
                    onPress: () => {
                      router.replace('/');
                    },
                  },
                ]
              );
            } catch (error) {
              Alert.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
            }
          },
        },
      ]
    );
  };

  return (
    <>
      <Stack.Screen
        options={{
          title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
          headerStyle: {
            backgroundColor: COLORS.primary,
          },
          headerTintColor: COLORS.white,
          headerTitleAlign: 'center',
        }}
      />

      <Container>
        <ScrollView 
          contentContainerStyle={{ 
            gap: SPACING.lg,
            paddingBottom: insets.bottom + SPACING.xl,
          }}
          showsVerticalScrollIndicator={false}
        >
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <View style={{ marginTop: SPACING.sm }}>
            <Text variant="title" weight="bold" align="center">
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </Text>
            <Text variant="caption" color="secondary" align="center" style={{ marginTop: SPACING.xs }}>
              –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥ —Å–µ–±—è
            </Text>
          </View>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
          <View
            style={{
              padding: SPACING.md,
              borderRadius: BORDER_RADIUS.lg,
              backgroundColor: COLORS.infoLight,
              borderWidth: 1,
              borderColor: COLORS.info,
            }}
          >
            <Text variant="caption" style={{ color: COLORS.primary }}>
              ‚ÑπÔ∏è –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–≤—É–∫–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏–µ–π –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
            </Text>
          </View>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏ */}
          <View
            style={{
              padding: SPACING.lg,
              borderRadius: BORDER_RADIUS.lg,
              backgroundColor: COLORS.white,
              borderWidth: 1,
              borderColor: COLORS.gray300,
              gap: SPACING.lg,
            }}
          >
            <Text variant="body" weight="semibold">
              –ò–≥—Ä–∞
            </Text>

            {/* –ó–≤—É–∫ */}
            <View
              style={{
                flexDirection: 'row',
                alignItems: 'center',
                justifyContent: 'space-between',
              }}
            >
              <View style={{ flex: 1, paddingRight: SPACING.md }}>
                <Text variant="body" weight="semibold" numberOfLines={1}>
                  –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
                </Text>
                <Text variant="caption" color="secondary" style={{ marginTop: 2 }} numberOfLines={2}>
                  –ó–≤—É–∫–∏ –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö
                </Text>
              </View>
              <Switch value={sound} onValueChange={toggleSound} />
            </View>

            {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
            <View style={{ height: 1, backgroundColor: COLORS.gray200 }} />

            {/* –í–∏–±—Ä–∞—Ü–∏—è */}
            <View
              style={{
                flexDirection: 'row',
                alignItems: 'center',
                justifyContent: 'space-between',
              }}
            >
              <View style={{ flex: 1, paddingRight: SPACING.md }}>
                <Text variant="body" weight="semibold" numberOfLines={1}>
                  –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                </Text>
                <Text variant="caption" color="secondary" style={{ marginTop: 2 }} numberOfLines={2}>
                  –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –∏–≥—Ä–æ–π
                </Text>
              </View>
              <Switch value={haptics} onValueChange={toggleHaptics} />
            </View>
          </View>

          {/* –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ */}
          <View
            style={{
              padding: SPACING.lg,
              borderRadius: BORDER_RADIUS.lg,
              backgroundColor: COLORS.white,
              borderWidth: 2,
              borderColor: COLORS.error,
              gap: SPACING.md,
            }}
          >
            <View style={{ flexDirection: 'row', alignItems: 'center', gap: SPACING.sm }}>
              <Text style={{ fontSize: 20 }}>‚ö†Ô∏è</Text>
              <Text variant="body" weight="semibold" color="error">
                –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞
              </Text>
            </View>

            <View style={{ gap: SPACING.sm }}>
              <Text variant="body" weight="semibold">
                –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
              </Text>
              <Text variant="caption" color="secondary" numberOfLines={3}>
                –£–¥–∞–ª–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è, –∑–≤—ë–∑–¥—ã –∏ –∏—Å—Ç–æ—Ä–∏—é. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
              </Text>

              <Pressable
                accessibilityRole="button"
                onPress={handleResetProgress}
                style={{
                  padding: SPACING.md,
                  borderRadius: BORDER_RADIUS.lg,
                  backgroundColor: COLORS.error,
                  alignItems: 'center',
                  marginTop: SPACING.sm,
                }}
              >
                <Text variant="button" color="white" weight="semibold">
                  üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å
                </Text>
              </Pressable>
            </View>
          </View>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ */}
          <View style={{ alignItems: 'center', paddingVertical: SPACING.md }}>
            <Text variant="caption" color="secondary">
              Word Rush v1.0.0
            </Text>
            <Text variant="caption" color="secondary" style={{ marginTop: SPACING.xs }}>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            </Text>
          </View>
        </ScrollView>
      </Container>
    </>
  );
}
