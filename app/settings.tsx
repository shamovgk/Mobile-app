/**
 * –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */

import { ThemedText } from '@/components/themed-text';
import { ThemedView } from '@/components/themed-view';
import { resetProgress } from '@/lib/storage';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { useRouter } from 'expo-router';
import { useEffect, useState } from 'react';
import { Alert, Pressable, Switch, Text, View } from 'react-native';

const SETTINGS_SOUND_KEY = 'settings:sound';
const SETTINGS_HAPTICS_KEY = 'settings:haptics';

export default function SettingsScreen() {
  const router = useRouter();
  const [sound, setSound] = useState(true);
  const [haptics, setHaptics] = useState(true);

  useEffect(() => {
    (async () => {
      const savedSound = await AsyncStorage.getItem(SETTINGS_SOUND_KEY);
      const savedHaptics = await AsyncStorage.getItem(SETTINGS_HAPTICS_KEY);

      if (savedSound !== null) setSound(savedSound === 'true');
      if (savedHaptics !== null) setHaptics(savedHaptics === 'true');
    })();
  }, []);

  const toggleSound = async (value: boolean) => {
    setSound(value);
    await AsyncStorage.setItem(SETTINGS_SOUND_KEY, String(value));
  };

  const toggleHaptics = async (value: boolean) => {
    setHaptics(value);
    await AsyncStorage.setItem(SETTINGS_HAPTICS_KEY, String(value));
  };

  /**
   * –°–±—Ä–æ—Å –≤—Å–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
   */
  const handleResetProgress = () => {
    Alert.alert(
      '‚ö†Ô∏è –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª—ë–Ω:\n\n‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤\n‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω–µ–π –∏ –∑–≤—ë–∑–¥—ã\n‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!',
      [
        {
          text: '–û—Ç–º–µ–Ω–∞',
          style: 'cancel',
        },
        {
          text: '–°–±—Ä–æ—Å–∏—Ç—å',
          style: 'destructive',
          onPress: async () => {
            try {
              await resetProgress();
              Alert.alert(
                '‚úì –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω',
                '–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.',
                [
                  {
                    text: 'OK',
                    onPress: () => {
                      // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
                      router.replace('/');
                    },
                  },
                ]
              );
            } catch (error) {
              Alert.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
            }
          },
        },
      ]
    );
  };

  return (
    <ThemedView style={{ flex: 1, padding: 16, gap: 16 }}>
      <ThemedText type="title">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</ThemedText>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <View
        style={{
          padding: 12,
          borderRadius: 12,
          backgroundColor: '#e3f2fd',
          borderWidth: 1,
          borderColor: '#2196f3',
        }}
      >
        <Text style={{ fontSize: 14, color: '#1565c0' }}>
          ‚ÑπÔ∏è –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–≤—É–∫–æ–≤—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏–µ–π –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
        </Text>
      </View>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏ */}
      <View
        style={{
          padding: 16,
          borderRadius: 12,
          backgroundColor: '#fff',
          borderWidth: 1,
          borderColor: '#ddd',
          gap: 16,
        }}
      >
        <Text style={{ fontSize: 16, fontWeight: '600', color: '#000' }}>–ò–≥—Ä–∞</Text>

        {/* –ó–≤—É–∫ */}
        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>
          <View style={{ flex: 1 }}>
            <Text style={{ fontSize: 16, fontWeight: '600', color: '#000' }}>–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</Text>
            <Text style={{ fontSize: 12, color: '#666', marginTop: 2 }}>
              –ó–≤—É–∫–∏ –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö
            </Text>
          </View>
          <Switch value={sound} onValueChange={toggleSound} />
        </View>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <View style={{ height: 1, backgroundColor: '#e0e0e0' }} />

        {/* –í–∏–±—Ä–∞—Ü–∏—è */}
        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>
          <View style={{ flex: 1 }}>
            <Text style={{ fontSize: 16, fontWeight: '600', color: '#000' }}>–¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</Text>
            <Text style={{ fontSize: 12, color: '#666', marginTop: 2 }}>
              –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –∏–≥—Ä–æ–π
            </Text>
          </View>
          <Switch value={haptics} onValueChange={toggleHaptics} />
        </View>
      </View>

      {/* –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ - –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
      <View
        style={{
          padding: 16,
          borderRadius: 12,
          backgroundColor: '#fff',
          borderWidth: 2,
          borderColor: '#f44336',
          gap: 12,
        }}
      >
        <View style={{ flexDirection: 'row', alignItems: 'center', gap: 8 }}>
          <Text style={{ fontSize: 20 }}>‚ö†Ô∏è</Text>
          <Text style={{ fontSize: 16, fontWeight: '600', color: '#f44336' }}>–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</Text>
        </View>

        <View style={{ gap: 8 }}>
          <Text style={{ fontSize: 14, color: '#000' }}>–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</Text>
          <Text style={{ fontSize: 12, color: '#666' }}>
            –£–¥–∞–ª–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è, –∑–≤—ë–∑–¥—ã –∏ –∏—Å—Ç–æ—Ä–∏—é. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
          </Text>

          <Pressable
            accessibilityRole="button"
            onPress={handleResetProgress}
            style={{
              padding: 14,
              borderRadius: 12,
              backgroundColor: '#f44336',
              alignItems: 'center',
              marginTop: 8,
            }}
          >
            <Text style={{ color: 'white', fontWeight: '600', fontSize: 16 }}>üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å</Text>
          </Pressable>
        </View>
      </View>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ */}
      <View style={{ marginTop: 'auto', alignItems: 'center', paddingVertical: 16 }}>
        <Text style={{ fontSize: 12, color: '#666' }}>Word Rush v1.0.0</Text>
        <Text style={{ fontSize: 10, color: '#999', marginTop: 4 }}>
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        </Text>
      </View>
    </ThemedView>
  );
}
