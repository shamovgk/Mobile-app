/**
 * –£—Ç–∏–ª–∏—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
 */
export function formatDuration(seconds: number): string {
  const mins = Math.floor(seconds / 60);
  const secs = Math.round(seconds % 60);
  
  if (mins === 0) {
    return `${secs}—Å`;
  }
  
  return `${mins}–º ${secs}—Å`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É
 */
export function formatDate(dateString: string): string {
  const date = new Date(dateString);
  const now = new Date();
  const diffMs = now.getTime() - date.getTime();
  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
  
  if (diffDays === 0) return '–°–µ–≥–æ–¥–Ω—è';
  if (diffDays === 1) return '–í—á–µ—Ä–∞';
  if (diffDays < 7) return `${diffDays} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`;
  
  return date.toLocaleDateString('ru-RU', {
    day: 'numeric',
    month: 'short',
    year: 'numeric',
  });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç
 */
export function formatPercent(value: number, decimals: number = 0): string {
  return `${(value * 100).toFixed(decimals)}%`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
 */
export function formatNumber(num: number): string {
  return num.toLocaleString('ru-RU');
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —ç–º–æ–¥–∑–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
 */
export function getDifficultyEmoji(mode: 'easy' | 'normal' | 'hard'): string {
  switch (mode) {
    case 'easy': return 'üå±';
    case 'hard': return 'üî•';
    default: return '‚ö°';
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —ç–º–æ–¥–∑–∏ —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞
 */
export function getQuestionTypeEmoji(types: string[]): string {
  if (types.includes('anagram')) return 'üîÄ';
  if (types.includes('context')) return 'üí°';
  if (types.includes('form')) return 'üìù';
  return 'üî§';
}
